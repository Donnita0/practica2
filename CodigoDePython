import serial #Permite la comunicación con dispositivos a través del puerto serial.
import csv    # Facilita la lectura y escritura de archivos en formato CSV.
import time   # Proporciona funciones para manejar pausas y tiempos de espera.

# Configuración del puerto serial (ajusta el puerto según corresponda)
ser = serial.Serial('COM3', 9600, timeout=1)      # Se abre el puerto serial COM3 con una velocidad de 9600 baudios.
time.sleep(2)  # Esperar que la conexión se estabilice

# Archivo CSV
archivo_csv = "datos_sensores.csv"  # define donde se guaradaran los datos 

# Crear y escribir encabezados si el archivo no existe  
with open(archivo_csv, mode='w', newline='') as file:    #Se abre el archivo en modo escritura ('w'), lo que borra cualquier dato previo en el archivo.
    writer = csv.writer(file)
    writer.writerow(["Temperatura (°C)", "Humedad (%)", "Luminosidad", "Voltaje (V)"])

try:            # Se inicia un try para capturar errores y permitir salir del bucle con Ctrl + C.
    while True: # Un bucle while True mantiene el monitoreo en ejecución indefinidamente.
        linea = ser.readline().decode('utf-8').strip() # ser.readline() lee una línea completa de datos recibidos desde el puerto serial. .decode('utf-8') convierte los datos de bytes a cadena de texto. .strip() elimina espacios o saltos de línea extra.            
        if linea: # verfica si la linea recibida no esta vacia 
             try:
                datos = linea.split(",") # intenta dividir la línea recibida en partes separadas por comas.
                if len(datos) == 4:
                    temperatura = float(datos[0]) # convierte el primer elemento de la lista en un numero de punto flotante y lo guarda a la variable temperatura. 
                    humedad = float(datos[1]) # convierte el segundo dato en un numero de punto flotante y lo asigna a la variable humedad. 
                    luz = int(datos[2]) # convierte el tercer elemento de datos en un numero entero y lo guarda en luz. 
                    voltaje = float(datos[3]) # Convierte el cuarto elemento de datos en un número de punto flotante y lo guarda en voltaje.

                    print(f"T: {temperatura}°C, H: {humedad}%, L: {luz}, V: {voltaje}V") # Muestra en pantalla los valores capturados de los sensores.

                    # Guardar en CSV 
                    with open(archivo_csv, mode='a', newline='') as file: # Abre un archivo CSV para guardar los datos de los sensores.
                        writer = csv.writer(file) # Crea un objeto escritor para escribir datos en formato CSV.
                        writer.writerow([temperatura, humedad, luz, voltaje]) # Escribe una nueva línea en el archivo con los valores de los sensores.
                else:
                    print("Error: Datos incompletos recibidos") # Muestra un mensaje de error si la lista datos no tiene los 4 valores esperados.
            except ValueError: # Captura errores al convertir datos (float() o int()).
                print("Error: Formato inválido en los datos")
except KeyboardInterrupt: #  Permite al usuario detener el programa con Ctrl + C de forma segura.
    print("\nMonitoreo finalizado.")
    ser.close()
